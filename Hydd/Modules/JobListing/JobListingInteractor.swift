//
//  JobListingInteractor.swift
//  HYDD-driver
//
//  Created Syed Kashan on 26/01/2020.
//  Copyright Â© 2020 Syed Kashan. All rights reserved.
//
//  Template generated by Syed Kashan
//

import UIKit

class JobListingInteractor: JobListingInteractorInputProtocol {

    weak var presenter: JobListingInteractorOutputProtocol?
    
    static let apiClient = APIClient()
    var listingTask: URLSessionDataTask!
    
    func getNewMissions() {
        guard let id = HUM.shared.user?.id else {return}
        HUM.shared.getToken { isSuccess in
            if isSuccess{
                self.listingTask?.cancel()
        let list = URLRequest(url: NETWORKCONSTANTS.getMission(id: id),
                              method: URLRequest.HTTPMethod.get,
                              body: nil)
                self.listingTask = JobListingInteractor.apiClient.dataTask(list) {[weak self] response in
            //Response
            response.successResponse.flatMap { (data, response) in
                printHydd("Response is \(data) \nResponse \(response)")
                printHydd(String(decoding: data, as: UTF8.self))
                if let dataDictionary = data.getJSONFromData() {
                    if let message = dataDictionary["message"] as? String {
                        self?.presenter?.failureFound(message: message)
                    } else {
                        if let data = dataDictionary["data"] as? [[String: Any]] {
                            var missions = [CarSummaryModel]()
                            data.forEach { (mission) in
                                if let missionParsed = CarSummaryModel(JSON: mission) {
                                    missions.append(missionParsed)
                                }
                            }
                            self?.presenter?.successFound(data: missions)
                        } else {
                            self?.presenter?.failureFound(message: DJM.shared.getValue(view: "job_listing_view", variable: "went_wrong"))
                        }
                    }
                } else {
                     self?.presenter?.failureFound(message: DJM.shared.getValue(view: "job_listing_view", variable: "went_wrong"))
                        }
                    }
                }
            }
        }
    }
}
