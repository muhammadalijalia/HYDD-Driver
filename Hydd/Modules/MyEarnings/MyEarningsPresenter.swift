//
//  MyEarningsPresenter.swift
//  HYDD-driver
//
//  Created Macbook Pro on 14/03/2020.
//  Copyright Â© 2020 Syed Kashan. All rights reserved.
//
//  Template generated by Syed Kashan
//

import UIKit

class MyEarningsPresenter: MyEarningsPresenterProtocol, MyEarningsInteractorOutputProtocol {
    
    var earning: Earning?
    var screenType: ScreenTypeEarning?
    var selectedTime: Int?
    
    weak private var view: MyEarningsViewProtocol?
    var interactor: MyEarningsInteractorInputProtocol?
    private let router: MyEarningsWireframeProtocol

    init(interface: MyEarningsViewProtocol, interactor: MyEarningsInteractorInputProtocol?, router: MyEarningsWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
}

extension MyEarningsPresenter {
    func successData(earnings: Earning) {
        view?.hideLoader()
        DispatchQueue.main.async {
            self.earning = earnings
            self.view?.reloadContent()
        }
    }
    
    func failedData(message: String) {
        view?.hideLoader()
        HMM.shared.showError(title: DJM.shared.getValue(view: "earnings_view", variable: "error"), message: message)
    }
}

extension MyEarningsPresenter {
    func setInitialData() {
        view?.showLoader()
        self.interactor?.getData()
//        var days = [EarningSummary]()
//        for i in 0...6 {
//            var day = EarningSummary()
//            day.time = "Today \(i)"
//            day.earning = 200
//            day.dedicated = 1
//            day.transfer = 1
//            day.mission = 1
//            days.append(day)
//        }
//        var weeks = [EarningSummary]()
//        for i in 0...3 {
//            var day = EarningSummary()
//            day.time = "Week \(i)"
//            day.earning = 300
//            day.dedicated = 2
//            day.transfer = 2
//            day.mission = 2
//            weeks.append(day)
//        }
//        var years = [EarningSummary]()
//        for i in 0...11 {
//            var day = EarningSummary()
//            day.time = "Year \(i)"
//            day.earning = 400
//            day.dedicated = 3
//            day.transfer = 3
//            day.mission = 3
//            years.append(day)
//        }
//        let earnings = Earning(day: days, week: weeks, month: years)
//        self.earning = earnings
//
//        self.view?.reloadContent()
        
    }
    
    func setScreenType(screen: ScreenTypeEarning) {
        self.screenType = screen
        self.selectedTime = 0
        self.view?.showHideLeftButton(show: false)
        self.view?.reloadContent()
    }
    
    func setSelectedTime(time: String) {
        guard let screen = self.screenType,
            let id = self.selectedTime else {return}
        if time == "+" {
            switch screen {
            case .day:
                guard let count = self.earning?.day.count else {return}
                if id < count - 1 {
                    selectedTime = id + 1
                }
            case .week:
                guard let count = self.earning?.week.count else {return}
                if id < count - 1 {
                    selectedTime = id + 1
                }
            case .month:
                guard let count = self.earning?.month.count else {return}
                if id < count - 1 {
                    selectedTime = id + 1
                }
            }
        } else {
            if id >= 1 {
                selectedTime = id - 1
            }
        }
        self.view?.reloadContent()
    }
}
