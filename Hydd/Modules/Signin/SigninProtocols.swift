//
//  SigninProtocols.swift
//  Hydd
//
//  Created Syed Kashan on 05/01/2020.
//  Copyright Â© 2020 Syed Kashan. All rights reserved.
//
//  Template generated by Syed Kashan
//

import Foundation

enum TFStatus {
    case success
    case error
    case warning
    case none
    case empty
}

// MARK: Wireframe -
protocol SigninWireframeProtocol: class {
    
    func goBack()
    func showForgotPassword()
    func showSignUp()
    
}

// MARK: Presenter -
protocol SigninPresenterProtocol: class {

    var interactor: SigninInteractorInputProtocol? { get set }
    
    var username: String? {get set}
    var password: String? {get set}
    
    func login()
    
    func set(username: String?)
    func set(password: String?)
    
    func goBack()
    func showForgotPassword()
    func showSignup()
    
}

// MARK: Interactor -
protocol SigninInteractorOutputProtocol: class {

    /* Interactor -> Presenter */
    func successLogin()
    func failedLogin()
}

protocol SigninInteractorInputProtocol: class {

    var presenter: SigninInteractorOutputProtocol? { get set }
    
    func login(email: String, password: String)

    /* Presenter -> Interactor */
}

// MARK: View -
protocol SigninViewProtocol: class {

    var presenter: SigninPresenterProtocol? { get set }

    /* Presenter -> ViewController */
    func setUserNameTF()
    func setPasswordTF()
    
    func showLoader()
    func hideLoader()
    
    func setEmailStatus(error: TfError, status: TFStatus)
    func setPasswordStatus(error: TfError, status: TFStatus)
}
