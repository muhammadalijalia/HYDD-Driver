//
//  RegisterProtocols.swift
//  HYDD-driver
//
//  Created Syed Kashan on 26/01/2020.
//  Copyright Â© 2020 Syed Kashan. All rights reserved.
//
//  Template generated by Syed Kashan
//

import Foundation

// MARK: Wireframe -
protocol RegisterWireframeProtocol: class {
    func goBack()
    func gotoRequestScreen()
    
}
// MARK: Presenter -
protocol RegisterPresenterProtocol: class {

    var interactor: RegisterInteractorInputProtocol? { get set }
    
    var model: String? {get set}
    var brand: String? {get set}
    var color: String? {get set}
    var year: String? {get set}
    var plateNumber: String? {get set}
    var brandId: Int? {get set}
    var modelId: Int? {get set}
    var brandModel: [BrandsModel]? {get set}
    
    func set(model: Int)
    func set(brand: Int)
    func set(color: String)
    func set(year: String)
    func set(plateNumber: String)
    
    func register()
    func getBrands()
    
    func goBack()
}

// MARK: Interactor -
protocol RegisterInteractorOutputProtocol: class {

    /* Interactor -> Presenter */
    func succesfullRequest(message: String)
    func failedRequest(message: String)
    func success(brands: [BrandsModel])
    func failed()
    
}

protocol RegisterInteractorInputProtocol: class {

    var presenter: RegisterInteractorOutputProtocol? { get set }

    /* Presenter -> Interactor */
    func register(para: [String: Any])
    func getBrands()
}

// MARK: View -
protocol RegisterViewProtocol: class {

    var presenter: RegisterPresenterProtocol? { get set }
    
    func showLoader()
    func hideLoader()
    /* Presenter -> ViewController */
}
