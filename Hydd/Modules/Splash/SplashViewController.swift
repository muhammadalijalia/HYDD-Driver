//
//  SplashViewController.swift
//  AskWho
//
//  Created Shahzaib Iqbal Bhatti on 8/27/19.
//  Copyright © 2019 Shahzaib Iqbal Bhatti. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import AVKit
import AVFoundation

class SplashViewController: BaseViewController, SplashViewProtocol {
    
    @IBOutlet weak var imageSplash: UIImageView!
    var presenter: SplashPresenterProtocol?
    
    var player = AVPlayer()
    var playerLayer = AVPlayerLayer()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        HLM.shared.startServices()
        if AppLanguage.selectedLanguage == "fr" {
            self.presenter?.startDownloadingFrench()
        } else {
            self.presenter?.startDownloadingEnglish()
        }
    }
    override func viewWillAppear(_ animated: Bool) {
        
        guard let path = Bundle.main.path(forResource: "splash", ofType: "mp4") else {
            debugPrint("video.m4v not found")
            return
        }
        
        player = AVPlayer(url: URL(fileURLWithPath: path))
        playerLayer = AVPlayerLayer(player: player)
        playerLayer.frame = self.view.bounds
        playerLayer.videoGravity = .resizeAspectFill
        self.imageSplash.layer.addSublayer(playerLayer)
        player.play()
        NotificationCenter.default.addObserver(forName: .AVPlayerItemDidPlayToEndTime, object: self.player.currentItem, queue: .main) { [weak self] _ in
            self?.player.seek(to: CMTime.zero)
            self?.player.play()
        }
    }
    
    deinit {
        NotificationCenter.default.removeObserver(self, name: .AVPlayerItemDidPlayToEndTime, object: nil)
        NotificationCenter.default.removeObserver(self)
    }
    
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        DispatchQueue.main.asyncAfter(deadline: .now() + 5) {
            self.presenter?.makeUserFlow()
        }
    }
    
    func englishJSONDownloadedSuccessfully() {
        ///
    }
    
    func englishJSONDownloadingFailed() {
        ///
    }
    
    func arabicJSONDownloadedSuccessfully() {
        ///
    }
    
    func arabicJSONDownloadingFailed() {
        ///
    }
    //    @IBAction func ActionSwitchLanguage(_ sender: UIButton) {
    //        let languages = ["English", "العربية"]
    //        let alert = UIAlertController(title: "", message: "", preferredStyle: .actionSheet)
    //
    //        for language in languages {
    //            alert.addAction(UIAlertAction(title: language, style: .default, handler: { (action)in
    //                guard let language = action.title else {
    //                    return
    //                }
    //                self.presenter?.switchLangauge(language: language)
    //            }))
    //        }
    //
    //        alert.addAction(UIAlertAction(title: "Cancel", style: .cancel, handler: nil))
    //
    //        let cellRect = logoTitle.frame
    //
    //        if let popoverPresentationController = alert.popoverPresentationController {
    //            popoverPresentationController.sourceView = self.logoTitle
    //            popoverPresentationController.sourceRect = cellRect
    //        }
    //
    //        self.present(alert, animated: true, completion: {
    //            print("completion block")
    //        })
    //    }
    
    func languageSwitchedSuccessfully(langauge: String) {
        var transition: UIView.AnimationOptions = .transitionFlipFromLeft
        if let appDelegate = AppDelegate.shared {
            guard let window = appDelegate.window else {
                return
            }
            
            if langauge == "en" {
                transition = .transitionFlipFromRight
                UIView.appearance().semanticContentAttribute = .forceLeftToRight
            } else {
                transition = .transitionFlipFromLeft
                UIView.appearance().semanticContentAttribute = .forceLeftToRight
            }
            
            //            Bootstrapper.showSettings()
            UIView.transition(with: window, duration: 0.5, options: transition, animations: {
                
            }, completion: nil)
        }
    }
}
