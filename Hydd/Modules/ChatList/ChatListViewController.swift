//
//  ChatListViewController.swift
//  HYDD-driver
//
//  Created Macbook Pro on 07/04/2020.
//  Copyright Â© 2020 Syed Kashan. All rights reserved.
//
//  Template generated by Syed Kashan
//

import UIKit
import FirebaseDatabase

class ChatListViewController: BaseViewController, ChatListViewProtocol {
    
    @IBOutlet weak var tableViewList: UITableView!
    var presenter: ChatListPresenterProtocol?
    
    var chatList: [ChatModel]?
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupNavigation()
        setupView()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        guard let id = HUM.shared.user?.id else {return}
        chatList = []
        self.showLoadingIndicator()
        APPCONSTANT.Chats.databaseChats.child("Chat_\(id)").observe(.childAdded) { (snapshot) in
            var index = 1
            let count = snapshot.childrenCount
            for user in snapshot.children.allObjects as! [DataSnapshot] {
                if count == index {
                    if let userList = user.value as? [String: Any] {
                        if let userParsed = ChatModel(JSON: userList) {
                            self.chatList?.append(userParsed)
                            self.tableViewList.reloadData()
                        }
                    }
                }
                index += 1
            }
        }
        DispatchQueue.main.asyncAfter(deadline: .now() + 1, execute: {
            self.hideLoadingIndicator()
        })
    }
}

extension ChatListViewController: SetupViewController {
    func setupNavigation() {
        setNavigationWithLogoAndMenuButton()
    }
    
    func setupView() {
        tableViewList.tableFooterView = UIView()
        tableViewList.delegate = self
        tableViewList.dataSource = self
        tableViewList.register(UINib(nibName: "ChatListTableViewCell", bundle: nil), forCellReuseIdentifier: "ChatListTableViewCell")
    }
    
    func networkRequest() {
        
    }
    
}

extension ChatListViewController: UITableViewDelegate {
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        guard let data = self.chatList?[indexPath.row] else {return}
        self.presenter?.showChat(idClient: data.userId, image: data.userImage, userName: data.userName)
    }
}

extension ChatListViewController: UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        guard let chatCount = self.chatList?.count else {return 0}
        return chatCount
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        guard let count = self.chatList?.count, count > indexPath.row else { return UITableViewCell()}
        guard let cell = tableViewList.dequeueReusableCell(withIdentifier: "ChatListTableViewCell") as? ChatListTableViewCell else {return UITableViewCell()}
        guard let chat = self.chatList?[indexPath.row] else {return UITableViewCell()}
        cell.configureCell(object: chat)
        return cell
    }
}
