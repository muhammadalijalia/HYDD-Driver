//
//  MyJobsInteractor.swift
//  HYDD-driver
//
//  Created Syed Kashan on 06/02/2020.
//  Copyright Â© 2020 Syed Kashan. All rights reserved.
//
//  Template generated by Syed Kashan
//

import UIKit

class MyJobsInteractor: MyJobsInteractorInputProtocol {
    
    weak var presenter: MyJobsInteractorOutputProtocol?
    
    static let apiClient = APIClient()
    var missionTask: URLSessionDataTask!
    
    func getMyMissions(progress: Bool) {
        guard let id = HUM.shared.user?.id else {return}
        HUM.shared.getToken { isSuccess in
            if isSuccess{
                self.missionTask?.cancel()
                var missionURL: URLRequest!
                if progress {
                    missionURL = URLRequest(url: NETWORKCONSTANTS.getMyCurrentMissions(id: id),
                                            method: URLRequest.HTTPMethod.get,
                                            body: nil)
                } else {
                    missionURL = URLRequest(url: NETWORKCONSTANTS.getMyCompletedMissions(id: id),
                                            method: URLRequest.HTTPMethod.get,
                                            body: nil)
                }
                self.missionTask = MyJobsInteractor.apiClient.dataTask(missionURL) {[weak self] response in
                    response.successResponse.flatMap { (data, response) in
                        printHydd("Response is \(data) \nResponse \(response)")
                        printHydd(String(decoding: data, as: UTF8.self))
                        if let dataDictionary = data.getJSONFromData() {
                            if let message = dataDictionary["message"] as? String {
                                self?.presenter?.failure(message: message)
                            } else {
                                if let data = dataDictionary["data"] as? [[String: Any]] {
                                    var missions = [CarSummaryModel]()
                                    data.forEach { (mission) in
                                        if let missionParsed = CarSummaryModel(JSON: mission) {
                                            missions.append(missionParsed)
                                        }
                                    }
                                    self?.presenter?.success(data: missions)
                                } else {
                                    self?.presenter?.failure(message: DJM.shared.getValue(view: "job_completed_view", variable: "went_wrong"))
                                }
                            }
                        } else {
                            self?.presenter?.failure(message: DJM.shared.getValue(view: "job_completed_view", variable: "went_wrong"))
                        }
                    }
                }
            }
        }
    }
}
