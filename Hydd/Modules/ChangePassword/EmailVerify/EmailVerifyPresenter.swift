//
//  EmailVerifyPresenter.swift
//  HYDD-driver
//
//  Created Syed Kashan on 01/03/2020.
//  Copyright Â© 2020 Syed Kashan. All rights reserved.
//
//  Template generated by Syed Kashan
//

import UIKit

class EmailVerifyPresenter: EmailVerifyPresenterProtocol, EmailVerifyInteractorOutputProtocol {
    
    var email: String?

    weak private var view: EmailVerifyViewProtocol?
    var interactor: EmailVerifyInteractorInputProtocol?
    private let router: EmailVerifyWireframeProtocol

    init(interface: EmailVerifyViewProtocol, interactor: EmailVerifyInteractorInputProtocol?, router: EmailVerifyWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }

    func successChange() {
        view?.hideLoader()
        view?.dismissView()
    }
    
    func failedChange() {
        view?.hideLoader()
    }
    
    func set(email: String) {
        self.email = email
    }
    
    func update() {
        let (email, isValid) = validateEmail()
        if isValid {
            view?.showLoader()
            interactor?.update(email: email)
        } else {
            HMM.shared.showWarning(title: DJM.shared.getValue(view: "change_password_view", variable: "warning"), message: DJM.shared.getValue(view: "change_password_view", variable: "validemail"))
        }
    }
    
    func validateEmail()  -> (String, Bool) {
        
        guard let email = self.email else {
//            view?.setEmailStatus(error: TfError.emptyEmail, status: .empty)
            return ("", false)
        }
        
        let isEmailValid = email.isValidEmail
        
//        isEmailValid ?
//            view?.setEmailStatus(error: TfError.none, status: .success) :
//            view?.setEmailStatus(error: TfError.invalidEmail, status: .error)
        
        return (email, isEmailValid)
    }
}
