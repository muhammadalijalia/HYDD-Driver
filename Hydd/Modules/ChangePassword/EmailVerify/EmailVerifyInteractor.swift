//
//  EmailVerifyInteractor.swift
//  HYDD-driver
//
//  Created Syed Kashan on 01/03/2020.
//  Copyright Â© 2020 Syed Kashan. All rights reserved.
//
//  Template generated by Syed Kashan
//

import UIKit

class EmailVerifyInteractor: EmailVerifyInteractorInputProtocol {
    
    weak var presenter: EmailVerifyInteractorOutputProtocol?
    
    static let apiClient = APIClient()
    
    var emailTask: URLSessionDataTask!
    
    func update(email: String) {
        guard let oEmail = HUM.shared.user?.email,
        let id = HUM.shared.user?.id else {return}
        HUM.shared.getToken { isSuccess in
            if isSuccess{
                self.emailTask?.cancel()
                let para = ["old_email": oEmail,
                            "new_email": email]
                let emailReq = URLRequest(url: NETWORKCONSTANTS.updateEmail(id: id),
                                          method: URLRequest.HTTPMethod.put,
                                          body: para)
                self.emailTask = EmailVerifyInteractor.apiClient.dataTask(emailReq) {[weak self] response in
                    //Response
                    response.successResponse.flatMap { (data, response) in
                        printHydd("Response is \(data) \nResponse \(response)")
                        printHydd(String(decoding: data, as: UTF8.self))
                        if let dataDictionary = data.getJSONFromData() {
                            if let message = dataDictionary["message"] as? String {
                                HMM.shared.showError(title: DJM.shared.getValue(view: "change_password_view", variable: "error"), message: message)
                                self?.presenter?.failedChange()
                            } else {
                                HMM.shared.showStatusSuccess(message: DJM.shared.getValue(view: "change_password_view", variable: "email_success"))
                                HUM.shared.getProfile(id: id) { (isSuccess) in
                                    if isSuccess {
                                        self?.presenter?.successChange()
                                    } else {
                                        Bootstrapper.logout()
                                    }
                                }
                            }
                        } else {
                            self?.presenter?.failedChange()
                        }
                    }
                }
            }
        }
    }
}
