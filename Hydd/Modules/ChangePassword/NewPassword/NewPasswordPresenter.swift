//
//  NewPasswordPresenter.swift
//  HYDD-driver
//
//  Created Syed Kashan on 01/03/2020.
//  Copyright Â© 2020 Syed Kashan. All rights reserved.
//
//  Template generated by Syed Kashan
//

import UIKit

class NewPasswordPresenter: NewPasswordPresenterProtocol, NewPasswordInteractorOutputProtocol {
    
    var newPassword: String?
    var oldPassword: String?

    weak private var view: NewPasswordViewProtocol?
    var interactor: NewPasswordInteractorInputProtocol?
    private let router: NewPasswordWireframeProtocol

    init(interface: NewPasswordViewProtocol, interactor: NewPasswordInteractorInputProtocol?, router: NewPasswordWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    func successChanged() {
        view?.dismissView()
        view?.hideLoader()
    }
    
    func failedChanged() {
        view?.hideLoader()
    }
    
    func actionOK() {
        guard let old = self.oldPassword,
            let new = self.newPassword else {return}
        if new.isValidPassword {
            view?.showLoader()
            let para = [ "password": old,
                         "new_password": new]
            interactor?.changePassword(para: para)
        } else {
            HMM.shared.showWarning(title: DJM.shared.getValue(view: "change_password_view", variable: "warning"), message: DJM.shared.getValue(view: "change_password_view", variable: "password_condition"))
        }
        
    }
    
    func set(password: String) {
        self.newPassword = password
    }
    
    func goBack() {
        router.goBack()
    }
    

}
