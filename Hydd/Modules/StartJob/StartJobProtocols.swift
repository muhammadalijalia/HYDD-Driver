//
//  StartJobProtocols.swift
//  HYDD-driver
//
//  Created Syed Kashan on 09/02/2020.
//  Copyright Â© 2020 Syed Kashan. All rights reserved.
//
//  Template generated by Syed Kashan
//

import Foundation
enum ScreenTypeVehicleDetail {
    case progress, listing
}
// MARK: Wireframe -
protocol StartJobWireframeProtocol: class {
    func goBack()
    func gotoStartVerify(classVehicle: String)
    func gotoCancelJob()
    func gotoAcceptJob(classVehicle: String)
    func gotoNavigation(car: String)
    func acceptJob()
    func gotoRegisterCar(classVehicle: String)
    func gotoCarRegisterScreen()
}
// MARK: Presenter -
protocol StartJobPresenterProtocol: class {

    var interactor: StartJobInteractorInputProtocol? { get set }
    
    var screenType: ScreenTypeVehicleDetail? {get set}
    var isJobCancelled: Bool? {get set}
    var missionData: CarSummaryModel? {get set}
    
    func goBack()
    func startPressed()
    func cancelPressed()
    func gotoNavigation(car: String)
    func acceptJob(car: MyCarDetailModel)
    func gotoCarRegisterScreen()
    func trackMissionPressed()
    func cancelJob()
}

// MARK: Interactor -
protocol StartJobInteractorOutputProtocol: class {

    /* Interactor -> Presenter */
    func successRegister()
    func failureRegister(text: String)
    func successStart()
    func failureStart(text: String)
    func successCancelJob()
    func failureCancelJob(text: String)
    func successUpdatePlateNumber()
    func failureUpdatePlateNumber(text: String)
}

protocol StartJobInteractorInputProtocol: class {

    var presenter: StartJobInteractorOutputProtocol? { get set }

    func registerMission(para: [String : Any], plateNumber: String)
    func startMisson(missionId: Int, plateNumber: String)
    func cancelJob(missionId: Int)
    /* Presenter -> Interactor */
}

// MARK: View -
protocol StartJobViewProtocol: class {

    var presenter: StartJobPresenterProtocol? { get set }

    /* Presenter -> ViewController */
    func showLoader()
    func hideLoader()
    func reloadView()
}
