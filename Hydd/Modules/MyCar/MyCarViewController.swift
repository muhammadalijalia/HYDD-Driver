//
//  MyCarViewController.swift
//  HYDD-driver
//
//  Created Macbook Pro on 18/03/2020.
//  Copyright Â© 2020 Syed Kashan. All rights reserved.
//
//  Template generated by Syed Kashan
//

import UIKit

class MyCarViewController: BaseViewController, MyCarViewProtocol {

    @IBOutlet weak var labelTitle: UILabel!
    @IBOutlet weak var tableViewCars: UITableView!
    
    var presenter: MyCarPresenterProtocol?

	override func viewDidLoad() {
        super.viewDidLoad()
        setupNavigation()
        setupView()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        self.navigationController?.tabBarController?.tabBar.isHidden = true
        networkRequest()
    }
    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        self.navigationController?.tabBarController?.tabBar.isHidden = false
    }

    @IBAction func backButtonPressed(_ sender: UIButton) {
        self.presenter?.goBack()
    }
    
    func reloadData() {
        DispatchQueue.main.async {
            self.tableViewCars.reloadData()
        }
    }
    @IBAction func actionRegisterCar(_ sender: UIButton) {
        let controller = RegisterRouter.createModule()
        self.navigationController?.pushViewController(controller, animated: true)
    }
    
}
extension MyCarViewController: SetupViewController {
    func setupNavigation() {
        self.navigationController?.setNavigationBarHidden(false, animated: false)
        self.setNavigationWithLogoAndBackButton().addTarget(self, action: #selector(backButtonPressed(_:)), for: .touchUpInside)
        
    }
    
    func setupView() {
        self.tableViewCars.delegate = self
        self.tableViewCars.dataSource = self
        self.tableViewCars.register(UINib(nibName: "MyCarTableViewCell", bundle: nil), forCellReuseIdentifier: "MyCarTableViewCell")
        self.labelTitle.attributedText = DJM.shared.getValue(view: "mycars_view", variable: "mycar").styled(as: .gibsonRegular_40sp)
    }
    
    func networkRequest() {
        self.presenter?.getMyCars()
    }
    
}
extension MyCarViewController: UITableViewDelegate {
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        self.presenter?.goto(index: indexPath)
    }
}
extension MyCarViewController: UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        guard let count = self.presenter?.classes?.count else { return 0 }
        return count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        guard let cell = tableViewCars.dequeueReusableCell(withIdentifier: "MyCarTableViewCell") as? MyCarTableViewCell,
            let type = presenter?.classes?[indexPath.row].model else {return UITableViewCell()}
        cell.labelCar.attributedText = type.styled(as: .gibsonRegular_16sp)
        return cell
    }
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 50
    }
}
