//
//  MyProfilePresenter.swift
//  HYDD-driver
//
//  Created Macbook Pro on 15/03/2020.
//  Copyright Â© 2020 Syed Kashan. All rights reserved.
//
//  Template generated by Syed Kashan
//

import UIKit

class MyProfilePresenter: MyProfilePresenterProtocol, MyProfileInteractorOutputProtocol {

    weak private var view: MyProfileViewProtocol?
    var interactor: MyProfileInteractorInputProtocol?
    private let router: MyProfileWireframeProtocol

    init(interface: MyProfileViewProtocol, interactor: MyProfileInteractorInputProtocol?, router: MyProfileWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    var phone: String?
    var carPlate: String?
    var image: String?

    func successUpdate() {
        view?.hideLoader()
        DispatchQueue.main.async {
            HMM.shared.showStatusSuccess(message: DJM.shared.getValue(view: "profile_view", variable: "success_status"))
        }
    }
    func failedUpdate(error: String) {
        view?.hideLoader()
        DispatchQueue.main.async {
            HMM.shared.showError(title: DJM.shared.getValue(view: "profile_view", variable: "error"), message: error)
        }
    }
    
    func gotoEmailVerify() {
        self.router.gotoEmailVerify()
    }
    func gotoPassword() {
        self.router.gotoPassword()
    }
    func gotoCarSelect() {
        self.router.gotoCarSelect()
    }
    
    func set(phone: String) {
        self.phone = phone
    }
    func set(carPlate: String) {
        self.carPlate = carPlate
    }
    func set(image: String) {
        self.image = image
    }
    
    func updateProfile() {
        var para: [String: Any] = [:]
        if let img = self.image {
            para["user_image"] = img
        }
        if let number = self.phone {
            para["phone_number"] = number
        }
        if let carPlate = self.carPlate {
            para["platenumber"] = carPlate
        }
        view?.showLoader()
        self.interactor?.updateProfile(para: para)
    }
    func showPicker() {
        ImagePickerManager.shared.openImagePicker(delegate: self)
    }
}
extension MyProfilePresenter: ImagePickerDelegate {
    func didSelectImage(image: UIImage) {
//        self.view?.showLoader()
        self.view?.setNewImage(image: image)
//        self.set(profileImage: image)
//        self.interactor?.uploadPhoto(image: image)
    }
    func didCancel() {
    }
}
