//
//  SideMenuPresenter.swift
//  HYDD-driver
//
//  Created Syed Kashan on 26/01/2020.
//  Copyright Â© 2020 Syed Kashan. All rights reserved.
//
//  Template generated by Syed Kashan
//

import UIKit
enum SideMenu: Int {
    case newJob = 0, myJob, chat, earnings, contactUs, aboutUs, privacyPolicy, Logout
}
class SideMenuPresenter: SideMenuPresenterProtocol, SideMenuInteractorOutputProtocol {

    weak private var view: SideMenuViewProtocol?
    var interactor: SideMenuInteractorInputProtocol?
    private let router: SideMenuWireframeProtocol
    
    var sideMenuData: [SideMenuModel]?
    var screenType: SideMenu?

    init(interface: SideMenuViewProtocol, interactor: SideMenuInteractorInputProtocol?, router: SideMenuWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    func setInitialSideMenu() {
        sideMenuData = [SideMenuModel]()
        sideMenuData?.append(SideMenuModel(id: .newJob, image: UIImage(named: "icon_jobs") ?? UIImage(), name: "New jobs"))
        sideMenuData?.append(SideMenuModel(id: .myJob, image: UIImage(named: "icon_myjobs") ?? UIImage(), name: "My jobs"))
        sideMenuData?.append(SideMenuModel(id: .chat, image: UIImage(named: "icon_chat") ?? UIImage(), name: "Chat with your client"))
        sideMenuData?.append(SideMenuModel(id: .earnings, image: UIImage(named: "icon_earning") ?? UIImage(), name: "My earnings"))
        sideMenuData?.append(SideMenuModel(id: .contactUs, image: UIImage(named: "icon_contact") ?? UIImage(), name: "Contact us"))
        sideMenuData?.append(SideMenuModel(id: .aboutUs, image: UIImage(named: "icon_about") ?? UIImage(), name: "About us"))
        sideMenuData?.append(SideMenuModel(id: .privacyPolicy, image: UIImage(named: "icon_privacy") ?? UIImage(), name: "Privacy policy"))
        sideMenuData?.append(SideMenuModel(id: .Logout, image: UIImage(named: "icon_logout") ?? UIImage(), name: "Logout"))
        
    }
    
    func showProfile() {
        SideMenuManager.shared.dismissSideMenu()
        self.router.gotoProfile()
    }
    
    func gotoTab(indexpath: IndexPath) {
        guard let tag = self.sideMenuData?[indexpath.row].id,
        let screen = self.screenType else { return }
        if screen == tag {
            SideMenuManager.shared.dismissSideMenu()
            return
        }
        switch tag {
        case .newJob:
            self.router.gotoNewJob()
        case .myJob:
            SideMenuManager.shared.dismissSideMenu()
            self.router.gotoJob()
        case .chat:
            self.router.gotoChat()
        case .earnings:
            self.router.gotoEarning()
        case .contactUs:
            break
        case .aboutUs:
            break
        case .privacyPolicy:
            break
        case .Logout:
            Bootstrapper.logout()
        }
    }
    
}
